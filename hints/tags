!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jackson/cs3650/project-2/hints/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
DIRECTORY_H	directory.h	/^#define DIRECTORY_H$/;"	d
DIR_NAME_LENGTH	directory.h	/^#define DIR_NAME_LENGTH /;"	d
INODE_H	inode.h	/^#define INODE_H$/;"	d
NUFS_STORAGE_H	storage.h	/^#define NUFS_STORAGE_H$/;"	d
_reserved	directory.h	/^  char _reserved[12]; \/\/ space reserved to allow adding more metadata without changing struct /;"	m	struct:dirent	typeref:typename:char[12]
block	inode.h	/^  int block; \/\/ single block pointer (if max file size <= 4K)$/;"	m	struct:inode	typeref:typename:int
dirent	directory.h	/^typedef struct dirent {$/;"	s
dirent_t	directory.h	/^} dirent_t;$/;"	t	typeref:struct:dirent
inode	inode.h	/^typedef struct inode {$/;"	s
inode_t	inode.h	/^} inode_t;$/;"	t	typeref:struct:inode
inum	directory.h	/^  int inum; \/\/ inode number of the directory entry$/;"	m	struct:dirent	typeref:typename:int
mode	inode.h	/^  int mode;  \/\/ permission & type$/;"	m	struct:inode	typeref:typename:int
name	directory.h	/^  char name[DIR_NAME_LENGTH]; \/\/ name of the entry, up to 48 characters$/;"	m	struct:dirent	typeref:typename:char[]
refs	inode.h	/^  int refs;  \/\/ reference count$/;"	m	struct:inode	typeref:typename:int
size	inode.h	/^  int size;  \/\/ bytes$/;"	m	struct:inode	typeref:typename:int
